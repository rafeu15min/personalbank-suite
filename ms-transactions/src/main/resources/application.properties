# ==========================================================
# 1. CONFIGURAÇÕES GERAIS DA APLICAÇÃO
# ==========================================================
quarkus.application.name=ms-transactions
quarkus.application.version=1.0.0
quarkus.http.port=8080


# ==========================================================
# 2. CONFIGURAÇÃO DO CLIENTE REST (API de Contas)
# ==========================================================
# URL base da API de Contas Correntes da instituição financeira.
quarkus.rest-client."br.com.PersonalBank.client.BankApiClient".url=https://api.bancox.com.br/open-banking/accounts/v1

# Em um ambiente de produção, as configurações de segurança mTLS (keystore/truststore)
# seriam adicionadas aqui.


# ==========================================================
# 3. CONFIGURAÇÃO DO KAFKA E REACTIVE MESSAGING (Pub/Sub)
# ==========================================================
kafka.bootstrap.servers=localhost:9092

# --- CANAL DE ENTRADA (CONSUMER) PARA PROCESSAR SOLICITAÇÕES ---
# Este consumidor pode ser usado tanto para a carga inicial quanto para atualizações,
# dependendo do evento que o dispara.
mp.messaging.incoming.solicitacoes-transacoes.connector=smallrye-kafka
mp.messaging.incoming.solicitacoes-transacoes.topic=solicitacoes.transacoes
mp.messaging.incoming.solicitacoes-transacoes.group.id=transaction-processor-group
mp.messaging.incoming.solicitacoes-transacoes.value.deserializer=io.quarkus.kafka.client.serialization.JsonObjectDeserializer
mp.messaging.incoming.solicitacoes-transacoes.json.value.type=br.com.PersonalBank.event.TransactionRequestEvent
mp.messaging.incoming.solicitacoes-transacoes.fail-on-deserialization-failure=false