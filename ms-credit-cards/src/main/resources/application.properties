# ==========================================================
# 1. CONFIGURAÇÕES GERAIS DA APLICAÇÃO
# ==========================================================
quarkus.application.name=ms-credit-cards
quarkus.application.version=1.0.0
# Porta HTTP única para evitar conflitos locais.
quarkus.http.port=8081

# ==========================================================
# 2. IMPORTAÇÃO DA CONFIGURAÇÃO COMPARTILHADA
# ==========================================================
# Importa as configurações das instituições (URLs, etc.) do arquivo central.
quarkus.config.import=${user.dir}/../config/banks.yml

# ==========================================================
# 3. CONFIGURAÇÃO DO BANCO DE DADOS (LENDO DO .ENV)
# ==========================================================
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${DB_USER:postgres}
quarkus.datasource.password=${DB_PASSWORD:postgres}
quarkus.datasource.jdbc.url=${DB_URL:jdbc:postgresql://localhost:5432/personalbank_db}

# Geração de schema para desenvolvimento.
quarkus.hibernate-orm.database.generation=drop-and-create

# ==========================================================
# 4. CONFIGURAÇÃO DO KAFKA CONSUMER (CANAIS DE ENTRADA)
# ==========================================================
# Endereço dos servidores Kafka, lido do .env
kafka.bootstrap.servers=${KAFKA_BROKERS:localhost:9092}

# --- CANAL DE ENTRADA (CONSUMER) PARA A CARGA INICIAL ---
# Este consumidor escuta o evento genérico para buscar todo o histórico de cartões.
mp.messaging.incoming.carga-inicial-cartoes.connector=smallrye-kafka
mp.messaging.incoming.carga-inicial-cartoes.topic=consentimentos.carga-inicial.cartoes
mp.messaging.incoming.carga-inicial-cartoes.group.id=card-loader-group
mp.messaging.incoming.carga-inicial-cartoes.value.deserializer=io.quarkus.kafka.client.serialization.JsonObjectDeserializer
mp.messaging.incoming.carga-inicial-cartoes.json.value.type=br.com.PersonalBank.common.event.InitialLoadEvent


# --- CANAL DE ENTRADA (CONSUMER) PARA ATUALIZAÇÕES CONTÍNUAS ---
# Este consumidor usa uma expressão regular para escutar múltiplos tópicos por banco.
mp.messaging.incoming.atualizacoes-cartoes-bancos.connector=smallrye-kafka
mp.messaging.incoming.atualizacoes-cartoes-bancos.topic-pattern=cartoes\\.atualizacoes\\..*
mp.messaging.incoming.atualizacoes-cartoes-bancos.group.id=card-update-group
mp.messaging.incoming.atualizacoes-cartoes-bancos.value.deserializer=io.quarkus.kafka.client.serialization.JsonObjectDeserializer
mp.messaging.incoming.atualizacoes-cartoes-bancos.json.value.type=br.com.PersonalBank.event.UpdateCardEvent